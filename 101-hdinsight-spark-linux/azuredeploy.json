{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "single_hdi_1.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the HDInsight cluster to create."
      }
    },
    "identifier":{
      "type": "string",
      "metadata":{
        "description": "the identifier of the cluster"
      }
    },
    "storageAccount1": {
      "type": "string",
      "metadata": {
      "description": "The name of StorageAccount1."
      }
    },
    "clusterLoginUserName": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
      }
    },
    "clusterLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "sqlvirtualMachinesname": {
      "defaultValue": "sqltest",
      "type": "String"
    },
    "containerName": {
      "type": "string",
      "metadata": {
        "description": "Specify container name."
      }
    },
    "clusterVersion": {
      "type": "string",
      "metadata": {
        "description": "The version of HDI."
      },
      "defaultValue": "3.6"
    },
    "clusterWorkerNodeCount": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
        "description": "The number of nodes in the HDInsight cluster."
      }
    },
    "clusterType": {
      "type": "string",
      "defaultValue": "hbase",
      "allowedValues": [
        "hadoop",
        "hbase",
        "storm",
        "spark"
      ],
      "metadata": {
        "description": "The type of the HDInsight cluster to create."
      }
    },
    "workerNodeSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the worker node that hosts the application"
      },
      "defaultValue": "Standard_D3"
    },
    "headNodeSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the head node that hosts the application"
      },
      "defaultValue": "Standard_D3"
    },
    "sshUserName": {
      "type": "string",
      "defaultValue": "sshuser",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },
    "sshPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "sqlUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "sql username for hive metastore"
      }
    },
    "sqlPassword": {
      "type": "securestring",
      "metadata": {
        "description": "sql password for hive metastore"
      }
    },
    "vnetName": {
      "defaultValue": "sqltest",
      "type": "String"
    },
    "subnet1Name": {
      "defaultValue": "subnet120170503000000",
      "type": "String"
    },
    "metastoreName": {
      "type": "string",
      "defaultValue": "kylin_default_instance",
      "metadata": {
        "description": "The name of metadata store for KAP"
      }
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "Putting database name."
      }
    }
  },
  "variables": {
    "defaultApiVersion": "2015-05-01-preview",
    "clusterApiVersion": "2015-03-01-preview",
    "clusterStorageAccountName": "[parameters('storageAccount1')]",
    "applicationName": "KE",
    "galleryPackageIdentity": "Kyligence",
    "sqlDatabase": {
      "databaseName": "[parameters('databaseName')]",
      "serverName": "[parameters('sqlvirtualMachinesname')]"
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('clusterApiVersion')]",
      "name": "[parameters('clusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "properties": {
        "clusterVersion": "[parameters('clusterVersion')]",
        "osType": "Linux",
        "tier": "standard",
        "clusterDefinition": {
          "kind": "[parameters('clusterType')]",
          "componentVersion": {"SPARK": "2.4"},
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            },
            "yarn-site":{
              "yarn.acl.enable": "true",
              "yarn.resourcemanager.scheduler.class": "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler"
            },
            "hive-site": {
              "javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
              "javax.jdo.option.ConnectionURL": "[concat('jdbc:sqlserver://', variables('sqlDatabase').serverName, '.database.chinacloudapi.cn', ';databaseName=', variables('sqlDatabase').databaseName, ';')]",
              "javax.jdo.option.ConnectionUserName": "[concat(parameters('sqlUsername'), '@', variables('sqlDatabase').serverName)]",
              "javax.jdo.option.ConnectionPassword": "[parameters('sqlPassword')]"
            },
            "hive-env": {
              "hive_database": "Existing MSSQL Server database with SQL authentication",
              "hive_database_name": "[variables('sqlDatabase').databaseName]",
              "hive_database_type": "mssql",
              "hive_existing_mssql_server_database": "[variables('sqlDatabase').databaseName]",
              "hive_existing_mssql_server_host": "[concat(variables('sqlDatabase').serverName, '.database.chinacloudapi.cn')]",
              "hive_hostname": "[concat(variables('sqlDatabase').serverName, '.database.chinacloudapi.cn')]"
            },
            "capacity-scheduler":{
              "yarn.scheduler.capacity.maximum-am-resource-percent": "0.5",
              "yarn.scheduler.capacity.resource-calculator": "org.apache.hadoop.yarn.util.resource.DominantResourceCalculator",
              "yarn.scheduler.capacity.root.queues": "default,build,query",
              "yarn.scheduler.capacity.root.default.capacity": "10",
              "yarn.scheduler.capacity.root.default.user-limit-factor": "9",
              "yarn.scheduler.capacity.root.default.maximum-capacity": "90",
              "yarn.scheduler.capacity.root.default.state": "RUNNING",
              "yarn.scheduler.capacity.root.default.acl_submit_applications": "",
              "yarn.scheduler.capacity.root.query.capacity": "60",
              "yarn.scheduler.capacity.root.query.user-limit-factor": "2",
              "yarn.scheduler.capacity.root.query.maximum-capacity": "100",
              "yarn.scheduler.capacity.root.query.state": "RUNNING",
              "yarn.scheduler.capacity.root.query.acl_submit_applications": "",
              "yarn.scheduler.capacity.root.build.capacity": "30",
              "yarn.scheduler.capacity.root.build.user-limit-factor": "5",
              "yarn.scheduler.capacity.root.build.maximum-capacity": "90",
              "yarn.scheduler.capacity.root.build.state": "RUNNING",
              "yarn.scheduler.capacity.root.build.acl_submit_applications": ""
            },
            "tez-site":{
              "tez.queue.name": "default"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(parameters('storageAccount1'),'.blob.core.chinacloudapi.cn')]",
              "isDefault": true,
              "container": "[parameters('containerName')]",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount1')), variables('defaultApiVersion')).key1]"
            }

            
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "minInstanceCount": 1,
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "[parameters('headNodeSize')]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[concat(resourceGroup().id,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'))]",
                "subnet": "[concat(resourceGroup().id,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'),'/subnets/',parameters('subnet1Name'))]"
              },
              "scriptActions": []
            },
            {
              "name": "workernode",
              "minInstanceCount": 1,
              "targetInstanceCount": "[parameters('clusterWorkerNodeCount')]",
              "hardwareProfile": {
                "vmSize": "[parameters('workerNodeSize')]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[concat(resourceGroup().id,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'))]",
                "subnet": "[concat(resourceGroup().id,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'),'/subnets/',parameters('subnet1Name'))]"
              },
              "scriptActions": []
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "cluster": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.HDInsight/clusters',parameters('clusterName')))]"
    }
  }
}
